package <@{componentImpl.packageName}@>;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import <@{pageDo.name}@>;
import <@{entity.name}@>; 
import <@{component.name}@>;
import <@{dao.name}@>;

/**
 * <@{tableDesciption}@>
 * @author <@{setting.author}@>
 */
@Component("<@{component.paramName}@>")
public class <@{componentImpl.simpleName}@> implements <@{component.simpleName}@> {

	@Autowired 
	private <@{dao.simpleName}@> <@{dao.paramName}@>;

	@Override
	public Integer insert(<@{entity.simpleName}@> <@{entity.paramName}@>){
		return <@{dao.paramName}@>.insert(<@{entity.paramName}@>);
	}

	@Override
	public List<<@{entity.simpleName}@>> queryList(Map<String,Object> selectItem){
		return <@{dao.paramName}@>.queryList(selectItem);
	}

	@Override
	public <@{pageDo.simpleName}@><<@{entity.simpleName}@>> queryListPage(Long pageIndex,Integer pageSize,Map<String,Object> selectItem){
		if(selectItem==null){
			selectItem=new HashMap<String,Object>();
		}
		<@{pageDo.simpleName}@><<@{entity.simpleName}@>> pageBean=new <@{pageDo.simpleName}@><<@{entity.simpleName}@>>(pageIndex, pageSize);
		selectItem.put("page", pageBean);
		pageBean.setPage(<@{dao.paramName}@>.queryListPage(selectItem));
	 	return pageBean;
	}

<@if:"{primaryColumn}!=null"@>
	@Override
	public Integer updateBy<@{primaryColumn.codeName}@>(<@{entity.simpleName}@> <@{entity.paramName}@>){
		return <@{dao.paramName}@>.updateBy<@{primaryColumn.codeName}@>(<@{entity.paramName}@>);
	}
	
	@Override
	public Integer updateHasValueBy<@{primaryColumn.codeName}@>(<@{entity.simpleName}@> <@{entity.paramName}@>){
		return <@{dao.paramName}@>.updateHasValueBy<@{primaryColumn.codeName}@>(<@{entity.paramName}@>);
	}

	@Override
	public Integer deleteBy<@{primaryColumn.codeName}@>(<@{primaryColumn.javaType}@> <@{primaryColumn.paramName}@>){
		return <@{dao.paramName}@>.deleteBy<@{primaryColumn.codeName}@>(<@{primaryColumn.paramName}@>);
	}

	@Override
	public <@{entity.simpleName}@> findBy<@{primaryColumn.codeName}@>(<@{primaryColumn.javaType}@> <@{primaryColumn.paramName}@>){
		return <@{dao.paramName}@>.findBy<@{primaryColumn.codeName}@>(<@{primaryColumn.paramName}@>);
	}
	
	@Override
	public <@{entity.simpleName}@> findBy<@{primaryColumn.codeName}@>List(<@{primaryColumn.javaType}@> <@{primaryColumn.paramName}@>s){
		return <@{dao.paramName}@>.findBy<@{primaryColumn.codeName}@>List(<@{primaryColumn.paramName}@>s);
	}
	
	@Override
	public Integer deleteBatchBy<@{primaryColumn.codeName}@>(List<<@{primaryColumn.javaType}@>> <@{primaryColumn.paramName}@>s){
		return <@{dao.paramName}@>.deleteBatchBy<@{primaryColumn.codeName}@>(<@{primaryColumn.paramName}@>s);
	}
<@endIf@>
}